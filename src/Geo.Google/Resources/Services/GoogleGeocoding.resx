<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Failed To Create Uri" xml:space="preserve">
    <value>Failed to create the Google uri.</value>
  </data>
  <data name="Invalid Address" xml:space="preserve">
    <value>The address cannot be null or empty.</value>
  </data>
  <data name="Invalid Bounds" xml:space="preserve">
    <value>The bounds are invalid and will not be used.</value>
  </data>
  <data name="Invalid Components" xml:space="preserve">
    <value>The components are invalid and will not be used.</value>
  </data>
  <data name="Invalid Coordinates" xml:space="preserve">
    <value>The coordinates cannot be null.</value>
  </data>
  <data name="Invalid Fields" xml:space="preserve">
    <value>The fields are invalid and will not be used.</value>
  </data>
  <data name="Invalid Input" xml:space="preserve">
    <value>The input cannot be null or empty.</value>
  </data>
  <data name="Invalid Input Info" xml:space="preserve">
    <value>The input is invalid and will not be used.</value>
  </data>
  <data name="Invalid Input Type" xml:space="preserve">
    <value>The input type must be valid.</value>
  </data>
  <data name="Invalid Keyword" xml:space="preserve">
    <value>The keyword is invalid and will not be used.</value>
  </data>
  <data name="Invalid Language" xml:space="preserve">
    <value>The language is invalid and will not be used.</value>
  </data>
  <data name="Invalid Location" xml:space="preserve">
    <value>The location cannot be null.</value>
  </data>
  <data name="Invalid Location Bias" xml:space="preserve">
    <value>The location bias is invalid and will not be used.</value>
  </data>
  <data name="Invalid Location Bias Type" xml:space="preserve">
    <value>The location bias type is invalid and will not be used.</value>
  </data>
  <data name="Invalid Location Types" xml:space="preserve">
    <value>The location types are invalid and will not be used.</value>
  </data>
  <data name="Invalid Maximum Price" xml:space="preserve">
    <value>The maximum price is invalid and will not be used.</value>
  </data>
  <data name="Invalid Minimum Price" xml:space="preserve">
    <value>The minimum price is invalid and will not be used.</value>
  </data>
  <data name="Invalid Offset" xml:space="preserve">
    <value>The offset is invalid and will not be used.</value>
  </data>
  <data name="Invalid Origin" xml:space="preserve">
    <value>The origin is invalid and will not be used.</value>
  </data>
  <data name="Invalid Page Token" xml:space="preserve">
    <value>The page token is invalid and will not be used.</value>
  </data>
  <data name="Invalid PlaceId" xml:space="preserve">
    <value>The place id cannot be null or invalid.</value>
  </data>
  <data name="Invalid Query" xml:space="preserve">
    <value>The query cannot be null or invalid.</value>
  </data>
  <data name="Invalid Radius" xml:space="preserve">
    <value>The radius must be greater than 0.</value>
  </data>
  <data name="Invalid Radius Value" xml:space="preserve">
    <value>The radius is invalid and will not be used.</value>
  </data>
  <data name="Invalid RankBy" xml:space="preserve">
    <value>The rank by is invalid and will not be used.</value>
  </data>
  <data name="Invalid RankBy Distance Radius" xml:space="preserve">
    <value>The radius must not be greater than 0 on a rank by distance request.</value>
  </data>
  <data name="Invalid RankBy Distance Request" xml:space="preserve">
    <value>The keyword or type must be specified when ranking by distance.</value>
  </data>
  <data name="Invalid Region" xml:space="preserve">
    <value>The region is invalid and will not be used.</value>
  </data>
  <data name="Invalid Result Types" xml:space="preserve">
    <value>The result types are invalid and will not be used.</value>
  </data>
  <data name="Invalid Session Token" xml:space="preserve">
    <value>The session token is invalid and will not be used.</value>
  </data>
  <data name="Invalid Type" xml:space="preserve">
    <value>The type is invalid and will not be used.</value>
  </data>
  <data name="Invalid Types" xml:space="preserve">
    <value>The types are invalid and will not be used.</value>
  </data>
  <data name="Null Parameters" xml:space="preserve">
    <value>The Google parameters are null.</value>
  </data>
</root>